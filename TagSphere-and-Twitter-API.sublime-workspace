{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"too",
				"activateTooltip"
			],
			[
				"tst",
				"twitterSearchTerm"
			],
			[
				"margin",
				"margin-bottom"
			],
			[
				"twitter_",
				"twitter_search_term"
			],
			[
				"twit",
				"twitterSearchTerm"
			],
			[
				"exec",
				"executeTwitterTermSearch"
			],
			[
				"twist",
				"twitterSearchTerm"
			],
			[
				"createob",
				"createObjectForCloud"
			],
			[
				"fun",
				"fun	Function"
			],
			[
				"lito",
				"littleObjectFactoryForSingleValues"
			],
			[
				"accumula",
				"accumulatedValue"
			],
			[
				"argumets",
				"Arguments"
			],
			[
				"init",
				"initialValue"
			],
			[
				"merge",
				"mergeAll"
			],
			[
				"proj",
				"projectionFunctionThatReturnsArray"
			],
			[
				"tar",
				"testArray"
			],
			[
				"valu",
				"valueArray"
			],
			[
				"val",
				"valueArray"
			],
			[
				"aray",
				"arrayOfUnwanted"
			],
			[
				"searcht",
				"search_terms"
			],
			[
				"sear",
				"search_value"
			],
			[
				"aja",
				"ajax_results"
			],
			[
				"value",
				"value"
			],
			[
				"set",
				"setConfig"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"writ",
				"writable"
			],
			[
				"sum",
				"sumOfSquares"
			],
			[
				"for",
				"for	for (…) {…}"
			],
			[
				"pre",
				"preventExtensions"
			],
			[
				"prot",
				"prototype"
			],
			[
				"geto",
				"getOwnPropertyDescriptor"
			],
			[
				"defin",
				"defineProperty"
			],
			[
				"get",
				"getOwnPropertyDescriptor"
			],
			[
				"acce",
				"accessor_prop"
			],
			[
				"result",
				"result"
			],
			[
				"fu",
				"fun	Function"
			],
			[
				"Poin",
				"Point_3d"
			],
			[
				"pro",
				"prototype	SNIPPET - prototype (defining methods and properties)"
			],
			[
				"myO",
				"myObject"
			],
			[
				"tell",
				"tellHowMany"
			],
			[
				"quest",
				"questionsDiv"
			],
			[
				"dis",
				"displayQuestion"
			],
			[
				"questions",
				"questionsDiv"
			],
			[
				"each",
				"eachQuestion"
			],
			[
				"mul",
				"MultipleChoiceQuestion"
			],
			[
				"Dra",
				"DragDropQuestion"
			],
			[
				"Multip",
				"MultipleChoiceQuestion"
			],
			[
				"fruit",
				"fruitColor"
			],
			[
				"sc",
				"SCRIPT	Tag"
			],
			[
				"write",
				"writeWindow"
			],
			[
				"src",
				"srcArray"
			],
			[
				"imgA",
				"imgArray"
			],
			[
				"random",
				"randomNumberStorage"
			],
			[
				"rand",
				"randomSelection"
			],
			[
				"albums",
				"albumsNeeded"
			],
			[
				"album",
				"albumCover"
			],
			[
				"jq",
				"jqset	SNIPPET - jqset"
			],
			[
				"inl",
				"inline-block"
			],
			[
				"albu",
				"albumsNeeded"
			],
			[
				"results",
				"resultsHTML"
			],
			[
				"al",
				"albumsLength"
			],
			[
				"resu",
				"resultsHTML"
			],
			[
				"excerp",
				"excerptTruth"
			],
			[
				"excer",
				"excerptTruth"
			],
			[
				"strin",
				"stringLength"
			],
			[
				"str",
				"stringLength"
			],
			[
				"XML",
				"XMLHttpRequest"
			],
			[
				"resul",
				"resultsHtml"
			],
			[
				"foo",
				"fooTwo"
			],
			[
				"w",
				"whatIWant"
			],
			[
				"weight",
				"weightOrReps"
			]
		]
	},
	"buffers":
	[
		{
			"file": "index.html",
			"settings":
			{
				"buffer_size": 4116,
				"line_ending": "Windows"
			}
		},
		{
			"file": "style.css",
			"settings":
			{
				"buffer_size": 233,
				"line_ending": "Windows"
			}
		},
		{
			"file": "script.js",
			"settings":
			{
				"buffer_size": 12512,
				"line_ending": "Windows"
			}
		},
		{
			"file": "twitter_timeline_search.php",
			"settings":
			{
				"buffer_size": 2082,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows"
			}
		},
		{
			"file": "jqueryScript.js",
			"settings":
			{
				"buffer_size": 7424,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Refactoring to make Twitter Cloud app more OO.txt",
			"settings":
			{
				"buffer_size": 3534,
				"line_ending": "Windows",
				"name": "Refactoring to make Twitter Cloud app more object-"
			}
		},
		{
			"contents": "$(document).ready(function() {\n	\n	// Check to make sure jQuery loaded properly\n	function jqueryCheckLoad(selector, milliseconds) {\n\n		$(selector).fadeOut(milliseconds).fadeIn(milliseconds);\n	}\n	// Invoke the check\n	jqueryCheckLoad('#header', 700);\n\n	// Font-Awesome Icons\n	$('.bar-icon-right').tooltip();\n\n	// Takes military time and formats it into clock time	\n	function formatAMPM(date) {\n\n		var hours = date.getHours();\n		var minutes = date.getMinutes();\n		var AMorPM = hours >= 12 ? 'pm' : 'am';\n		\n		hours = hours % 12;\n		hours = hours ? hours : 12;\n		\n		minutes = minutes < 10 ? '0' + minutes : minutes;\n		\n		var strTime = hours + ':' + minutes + ' ' + AMorPM;\n		\n		return strTime;\n	}\n\n	// Takes 'created_at' values from tweet objects and turns it \n	// into a format I can use for the tags\n	// If 'withTime' is true, it adds the time to the result\n	function createDate(theGivenDate, withTime) {\n		var tempDate, date;\n		var ms = Date.parse(theGivenDate);\n\n		tempDate = new Date(ms);\n		date = tempDate.toString().slice(0, 10);\n		\n		if (withTime) {\n			\n			time = formatAMPM(tempDate);\n			date += \" \" + time;\n		}\n\n		return date;\n	}\n\n	function addTweetTags(arrayOfTweetObjects, variableToSaveTo, whichResults) {\n		var tweetText, tweetDate, url, displayText; \n\n		for (var i = 0; i < arrayOfTweetObjects.length; i++) {\n			\n			var tweet = arrayOfTweetObjects[i];\n\n			tweetText = tweet.text;\n			url = tweet.url;\n\n			if (whichResults === \"twitter_timeline_search.php\") {\n				\n				tweetDate = createDate(tweet.date, false);\n\n				displayText = tweetText + \" \\n\" + tweetDate;\n			}\n\n			if (whichResults === \"twitter_keyword_search.php\") {\n\n				var userName = \"- @\" + tweet.screen_name;\n				tweetDate = createDate(tweet.date, true);\n\n				displayText = \"\\n\" + tweetText + \"\\n\" + userName + \"\\n\" + tweetDate;\n			}\n\n			var newTweetTagObject = createObjectForCloud(displayText, url, variableToSaveTo);\n\n			variableToSaveTo.push(newTweetTagObject);\n		}\n	}\n\n	// Initialize tag cloud\n	function init(variableContainingTags) {\n\n		checkIfCloudExists();\n		\n		var w = document.body.clientWidth, h = document.body.clientHeight;\n		var clouder = document.getElementById('clouder');\n		var parent = document.getElementById('cloudParent');\n		var parentRect = parent.getBoundingClientRect();\n\n		clouder.style.width = (w * 3 / 4).toString() + \"px\";\n		clouder.style.height = (h * 1.75).toString() + \"px\";\n		clouder.style.position = \"absolute\";\n		clouder.style.left = (w / 6).toString() + \"px\";\n		clouder.style.top = (parentRect.y + window.pageYOffset).toString() + \"px\";\n		\n		window.clouder = new Clouder({\n			container: clouder,\n			tags: variableContainingTags,\n			nonSense: 0.3,\n			callback: urlCallback\n		});\n	}\n\n	// Callback f(x) for when tweet tags are clicked upon\n	// Checks to see whether tags exist, and if so, loops through the tag array \n	// until it finds the \"little object\" with the matching id, and then invokes \n	// 'urlConfirmAssignment', passing to the tweet text and url\n	var urlCallback = function(id) {\n		\n		if (twitterCloudTags.length !== 0) {\n			for (var i = 0; i < twitterCloudTags.length; i++) {\n				\n				var theTweet = twitterCloudTags[i];\n\n				if (theTweet.id === id) {\n					if (theTweet.url) {\n						\n						urlConfirmAssignment(theTweet.text, theTweet.url);\n					\n					} else {\n						alert(theTweet.text);\n					}\n				}\n			}\n		}\n	};\n\n	// Display dialog box showing tweet text and asking user if they would like to \n	// navigate to the link contained within the tweet\n	function urlConfirmAssignment(theText, theURL) {\n		var question = confirm(theText + \n			\"\\n\\n Are you sure you sure you want to navigate to the link contained in the outlined tweet?\");\n\n		if (question) {\n			window.open(theURL);\n		} else return;\n	}\n\n	// Make custom tag field responsive to enter key\n	function makeEnterKeyDoSomething(selector, func) {\n\n		$(selector).keydown(function(e) {\n			\n			if (e.keyCode === 13) {\n\n				func();\n			}\n		});\n	}\n\n	function scrollDownTo(elementSelector, milliseconds) {\n\n		$('html, body').animate({\n\n			scrollTop: $(elementSelector).offset().top\n		}, milliseconds);\n	}\n\n	function scrollUpToTop(milliseconds) {\n\n		$('html, body').animate({scrollTop: 0}, milliseconds);\n	}\n\n	function killCloud() {\n		window.clouder.kill();\n	}\n\n	function clearTweetTags() {\n		twitterCloudTags = [];\n	}\n\n	// When Clear Tags button clicked, kill the cloud, reset the tag array, \n	// then autoscroll back up to the top\n	$('.clearAll').click(function() {\n		\n		$('.options').fadeOut(1000);\n		eraseAllFields('.inputField');\n		\n		killCloud();\n		clearTweetTags();	\n\n		scrollUpToTop(500);\n	});\n\n	// Check to see if tags are already displayed from a \n	// previous search.  If so, kill that cloud.\n	function checkIfCloudExists() {\n\n		if ($('#clouder').children().length > 0) {\n\n			killCloud();\n		}\n	}\n\n	// AJAX request to Twitter for tweet data\n	function search(searchTerms, searchURL) {\n\n		// If cloud tags already, kill cloud before \n		// running the AJAX request\n		checkIfCloudExists();\n\n		$.ajax({\n\n			// Create URL for tweet search\n			url: searchURL + \"?q=\" + searchTerms, \n\n			success: function(data) {\n				\n				// Take returned string and parse into queryable JSON\n				// The server will have already cut the data down to \n				// only what I need for the cloud\n				var parsedData = JSON.parse(data);\n				console.log(parsedData);\n				\n				addTweetTags(parsedData, twitterCloudTags, searchURL);\n				setOfTenTweets.init(twitterCloudTags);\n				init(setOfTenTweets.returnTenTweets());\n				scrollDownTo('#clouder', 500);\n			},\n\n			error: function() {\n				$('#clouder').html('Search for Tweets failed!');\n			}\n		});\n	}\n\n	function getTwitterSearchTerm(searchFieldID) {\n		return $(searchFieldID).val();\n	}\n\n	// Abstraction of general search process\n	function executeSearch(searchTermField, url, optionsDiv) {\n		\n		var twitterSearchTerm;\n		var input = $.trim($(searchTermField).val());\n\n		// Execute the search only if there is something in the input field\n		if (input.length > 0) {\n\n			clearTweetTags();\n			twitterSearchTerm = getTwitterSearchTerm(searchTermField);\n			eraseAllFieldsButOne('.inputField', searchTermField);\n			displayOptions(optionsDiv);\n			search(twitterSearchTerm, url);\n		}\n		\n	}\n\n	var executeTwitterAccountSearch = function() {\n		executeSearch('#twitterHandle', 'twitter_timeline_search.php', '#feedCloudOptions');\n	}\n\n	var executeTwitterTermSearch = function() {\n		executeSearch('#search_term', 'twitter_keyword_search.php', '#searchCloudOptions');\n	}\n\n	// Activates button and input field so that their respective events \n	// trigger the given f(x)\n	function activateSearchField(buttonID, inputID, func) {\n\n			$(buttonID).click(function() {\n				func();\n			});\n\n			makeEnterKeyDoSomething(inputID, function() {\n				func();\n			});\n	}\n	activateSearchField('#createTwitterFeedCloud', '#twitterHandle', executeTwitterAccountSearch);\n	activateSearchField('#createTweetSearchCloud', '#search_term', executeTwitterTermSearch);\n\n	function hideAllButOne(theClass, theID) {\n		$(theClass).not(theID).fadeOut();\n	}\n\n	function eraseAllFieldsButOne(theClass, theID) {\n		$(theClass).not(theID).val('');\n	}\n\n	function eraseAllFields(theClass) {\n		$(theClass).val('');\n	}\n\n	function displayOptions(optionsID) {\n		\n		hideAllButOne('.options', optionsID);\n		$(optionsID).fadeIn(3000);\n	}\n\n	function getTenMoreTweets() {\n\n		init(setOfTenTweets.returnTenTweets());\n	}\n\n	$('#getTenPreviousTweets').on('click', function() {\n		\n		getTenMoreTweets();\n	});\n\n});\n\n\n\n// Have to document this (and all of my code) much more thoroughly so after\n// prolonged periods away from this project I can easily remember \n// how everything works\n\n// Arrays that will hold the tags used to generate the cloud\n// They are outside of any f(x)'s so that they can be accessed by \n// Other f(x)'s and code in other files -- I know there is a better \n// way to do this\n\nvar twitterCloudTags = [];\n\n// As part of its input, the Clouder class accepts an array of \n// \"little objects\" of the form: {text: theText, id: theID, weight: theWeight}\n// This f(x) creates a single \"little object\" for the cloud\nfunction createObjectForCloud(theText, theURL, cloudTags) {\n	var theID;\n\n	// Generates an ID for the new object based upon the number of tags already \n	// in the tag array.  The first ten tags take the numbers (as strings) 0-9, \n	// the next ten 00, 01, 02...09, the next ten 000, 001, 002...009, and so on. \n	function createID(arr) {\n		var tagLength = arr.length;\n		var subtractor = 0;\n\n		// Starting from zero, subtract from the number of elements in the \n		// array, until the result is evenly divisible by 10\n		while ((tagLength - subtractor)%10 > 0) {\n			subtractor++;\n		}\n\n		// The first digit of the tag is equal to the amount you had to \n		// subtract to get a number evenly divisible by 10\n		var myFirstDigit = subtractor;\n		// The number of zeroes is equal to the amount of times 10 goes \n		// into tagLength minus the subtractor\n		var myNumberOfZeroes = (tagLength - subtractor)/10;\n\n		function output(firstDigit, numberOfZeroes) {\n			var zeroes = \"\";\n\n			if (numberOfZeroes === 0) {\n				return firstDigit.toString();\n			}\n			else {\n				while (numberOfZeroes !== 0) {\n					zeroes += \"0\";\n					numberOfZeroes--;\n				}\n				return firstDigit.toString() + zeroes;\n			}\n		}\n		// Invoke the 'output' f(x)\n		return output(myFirstDigit, myNumberOfZeroes);\n	}\n	// Invoke 'createID' using array of cloud tags\n	theID = createID(cloudTags);\n\n	// Hardcoded weight value...may want to change this\n	return {text: theText, id: theID, weight: 0.1, url: theURL};\n}\n\n// Module that is initialized with the array of \"little tweet objects\"\n// The module takes that array and breaks the objects up into arrays \n// of length ten, and pushes them to an array which holds them all\n// The module then returns 10 tweet objects at a time, and when it has \n// returned all of them, the counter resets to 0.\nvar setOfTenTweets = (function() {\n\n	var counter;\n	var arrayOfSetsOfTen;\n\n	function incrementCounter() {\n		return counter++;\n	}\n\n	function resetCounter() {\n		counter = 0;\n		console.log(\"Counter reset to 0.\");\n	}\n\n	// Takes an array of elements, and breaks it up into sets of a \n	// given size, and then groups all these sets into a new array\n	function createArrayOfArrays(source, setSize) {\n		var i, j;\n		var arrayOfArrays = [];\n\n		for (var i = 0, j = source.length; i < j; i += setSize) {\n			\n			tempArray = source.slice(i, i + setSize);\n			arrayOfArrays.push(tempArray);\n		}\n\n		return arrayOfArrays;\n	}\n\n	// Initializes the module with the array of tweet objects\n	function init(arrayOfTweetObjects) {\n\n		arrayOfSetsOfTen = createArrayOfArrays(arrayOfTweetObjects, 10);\n    	counter = 0;\n	}\n\n	// Returns 10 of the tweet objects at a time\n	// If the counter has reached the length of the array of arrays, \n	// the counter resets to 0 and indicates this in the console\n	function returnTenTweets() {\n\n		var setOfTen;\n\n		setOfTen = arrayOfSetsOfTen[counter];\n		incrementCounter();\n  \n	    if (!(counter < arrayOfSetsOfTen.length)) {\n	      resetCounter();\n	    }\n    \n		return setOfTen;\n	}\n\n	return {\n		init: init,\n		returnTenTweets: returnTenTweets,\n		resetCounter: resetCounter\n	};\n\n})();\n",
			"settings":
			{
				"buffer_size": 11117,
				"line_ending": "Windows"
			}
		},
		{
			"file": "OLD_PRErefactor_jqueryScript.js",
			"settings":
			{
				"buffer_size": 7424,
				"line_ending": "Windows"
			}
		},
		{
			"file": "REFACTOR_bugfix_HUNT.js",
			"settings":
			{
				"buffer_size": 4345,
				"line_ending": "Windows"
			}
		},
		{
			"file": "TEMP_oo_REFACTOR.js",
			"settings":
			{
				"buffer_size": 12512,
				"line_ending": "Windows"
			}
		},
		{
			"file": "twitter_keyword_search.php",
			"settings":
			{
				"buffer_size": 2232,
				"line_ending": "Windows"
			}
		},
		{
			"file": "cloud.js",
			"settings":
			{
				"buffer_size": 15710,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 150.0,
		"selected_items":
		[
			[
				"jvs",
				"Set Syntax: JavaScript"
			],
			[
				"php",
				"Set Syntax: PHP"
			],
			[
				"packi",
				"Package Control: Install Package"
			],
			[
				"synpla",
				"Set Syntax: Plain Text"
			],
			[
				"synhtml",
				"Set Syntax: HTML"
			],
			[
				"color",
				"Color Picker"
			],
			[
				"pcki",
				"Package Control: Install Package"
			],
			[
				"css",
				"Set Syntax: CSS"
			],
			[
				"json",
				"Set Syntax: JSON"
			],
			[
				"html",
				"Set Syntax: HTML"
			],
			[
				"synr",
				"Set Syntax: R"
			],
			[
				"jv",
				"Set Syntax: JavaScript"
			],
			[
				"synjvs",
				"Set Syntax: JavaScript"
			],
			[
				"javs",
				"Set Syntax: JavaScript"
			],
			[
				"snippet",
				"Snippet: html"
			],
			[
				"javas",
				"Set Syntax: JavaScript"
			],
			[
				"synhtm",
				"Set Syntax: HTML"
			],
			[
				"synht",
				"Set Syntax: HTML"
			],
			[
				"HTML",
				"Set Syntax: HTML"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"packagi",
				"Package Control: Install Package"
			],
			[
				"synjavas",
				"Set Syntax: JavaScript"
			],
			[
				"select al",
				"Bookmarks: Select All"
			],
			[
				"xml",
				"xml2json: xml to json"
			],
			[
				"fetch",
				"Fetch: Package"
			],
			[
				"syn htm",
				"Set Syntax: HTML"
			],
			[
				"pack con i",
				"Package Control: Install Package"
			],
			[
				"packe con i",
				"Package Control: Install Package"
			],
			[
				"packet ins",
				"Package Control: Install Package"
			],
			[
				"synjaas",
				"Set Syntax: JavaScript"
			],
			[
				"Package Control: i",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 464.0
	},
	"console":
	{
		"height": 111.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript Is Sexy/Javascript_Is_Sexy_PROJECT.sublime-workspace",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript Is Sexy/Javascript_Is_Sexy_PROJECT.sublime-project",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/TEMP_oo_REFACTOR.js",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/OLD_PRErefactor_jqueryScript.js",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/keywordSearchCloudTagFormatting_NOTES.js",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/twitter_cloud_search.php",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/twitter_timeline_search.php",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/User/JavaScript/SNIPPET ifor loop.sublime-snippet",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/User/JavaScript/SNIPPET - jfor loop.sublime-snippet",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/function selectRandomHexValue.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/function invertHex.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/function selectRandomColor",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/fixDiv_NOTES.txt",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/quirksMode_workaround_NOTES.txt",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/codeCleanup_10.13_notes.txt",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/InsertDate/README.md",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project2_Twitter_API/timeline_response.php",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/search_response.php",
		"/C/Users/Vincent/Documents/Hckr/jquery/Useful Scripts/makeEnterKeyDoSomething.js",
		"/C/Users/Vincent/Documents/Hckr/Play/tweets/tweetPlay/jqueryForPlay.js",
		"/C/Users/Vincent/Documents/Hckr/Server-Side Stuff/Useful Scripts/test_input.php",
		"/C/Users/Vincent/Documents/Hckr/Server-Side Stuff/Useful Scripts/Validation_EmailFormat.php",
		"/C/Users/Vincent/Documents/Hckr/Server-Side Stuff/Useful Scripts/Validation_URL.php",
		"/C/Users/Vincent/Documents/Hckr/Server-Side Stuff/Useful Scripts/Validation_LettersAndWhiteSpacesOnly.php",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/jquery-1.11.1.min.js",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/cloud-min.js",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/cloud.js",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project2_Twitter_API/raw_data_response.php",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project2_Twitter_API/jqueryForProject.js",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project2_Twitter_API/search_response.php",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project2_Twitter_API/app_tokens.php",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project2_Twitter_API/index.html",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 7 - Arrays/ECMAScript 5 Array Methods.js",
		"/C/Users/Vincent/Documents/Hckr/jquery/Useful Scripts/scrollUpToTop.js",
		"/C/Users/Vincent/Documents/Hckr/jquery/Useful Scripts/scrollDownTo.js",
		"/C/Users/Vincent/Documents/Hckr/jquery/Useful Scripts/scrollDownToTop.js",
		"/C/Users/Vincent/Documents/Hckr/OPC/JsTagSphere/test.html",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/FunctionalProgrammingFunctions.js",
		"/C/Users/Vincent/Documents/Hckr/OPC/JsTagSphere/cloud.js",
		"/C/Users/Vincent/Documents/Hckr/OPC/JsTagSphere/mainpage.js",
		"/C/Users/Vincent/Documents/Hckr/OPC/JsTagSphere/README.md",
		"/C/cygwin64/home/Vincent/bashtest/myscript",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/User/JavaScript/SNIPPET - separator.sublime-snippet",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Functional Programming in Javascript/scrapPaper.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/PracticeCreatingFunctionalProgrammingFunctions.js",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/User/PlainText/SNIPPET - bashscript.sublime-snippet",
		"/C/Users/Vincent/Documents/Hckr/Play/textScanner.js",
		"/C/Users/Vincent/Documents/Hckr/Play/imgAggregator/imgAggregator.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 7 - Arrays/Iterating Arrays.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 7 - Arrays/Array Methods.js",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project2_Twitter_API/ajax_response.php",
		"/C/Users/Vincent/Documents/Hckr/OpenSource/SetUp/jQueryTest.js",
		"/C/Users/Vincent/Documents/Hckr/OpenSource/SetUp/TestHTMLPage",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/testTweets.json",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/testTweetsSep14.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/testTweets.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2014_09.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2014_08.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2014_07.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2014_06.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2014_05.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2014_04.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2014_03.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2014_02.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2014_01.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_12.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_11.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_10.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_09.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_08.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_07.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_06.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_05.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_04.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_03.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_02.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_01.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2012_12.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2012_11.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2012_10.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2012_09.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2012_08.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2012_07.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2012_06.js",
		"/C/Users/Vincent/Downloads/twitonomy_VRSanchez8717_vrsanchez8717.xlsx",
		"/C/Users/Vincent/Documents/Hckr/HTML/Test HTML Page w jQuery.html",
		"/C/Users/Vincent/Documents/Hckr/OpenSource/jQueryTestSetup.js",
		"/C/Users/Vincent/Documents/Hckr/jquery/jquery-1.11.1.min.js",
		"/C/Users/Vincent/Documents/Hckr/HTML/superBASIChtmlSetUp.html",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 7 - Arrays/Array-Like Objects.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 6 - Objects/Object Attributes.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 6 - Objects/Property Attributes.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 6 - Objects/Object dot create().js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 1 - Introduction to Javascript/constructor - Two-Dimensional Geometric Points.js",
		"/C/Users/Vincent/Documents/Hckr/Play/imgAggregator/index.html",
		"/C/Users/Vincent/Documents/Hckr/Play/Object Play/ObjectPlay - Implementation of the Combination Constructor-Prototype Pattern - Quiz Scores.js",
		"/C/Users/Vincent/Documents/Hckr/Play/Object Play/Quiz HTML Implementation.html",
		"/C/Users/Vincent/Documents/Hckr/Play/Object Play/ObjectPlay - Implementation of the Parasitic Combination Inheritance Pattern.js",
		"/C/Users/Vincent/Documents/Hckr/Play/Object Play/Object Play - Douglas Crockfords Object dot create method.js",
		"/C/Users/Vincent/Documents/Hckr/Play/Object Play/ObjectPlay - Instrument and JSON dot stringify.js",
		"/C/Users/Vincent/Documents/Hckr/Play/Object Play/Object Play - inheritPrototype.js",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project2_Twitter_API/tmhOAuth/README.md",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project 1 - Album Web App/jQueryForProject1.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/isArrayLike.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/union for any number of objects.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/union (obj manipulation).js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/extend (obj manipulation).js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/array - close gaps and remove undefined and null.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/dense - to close gaps in a sparse array.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/dense - to close gaps in a sparse array",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/defineProp.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 7 - Arrays/Multidimensional Arrays.js",
		"/C/Users/Vincent/Documents/Hckr/Play/imgAggregator/messingWith_imgAggregator.js",
		"/C/Users/Vincent/Documents/Hckr/Play/imgAggregator/TINKERimgAggregatorTINKER.js",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/User/JavaScript/SNIPPET - forin.sublime-snippet",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 6 - Objects/Class Attribute.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 6 - Objects/Property Getters and Setters.js",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/User/JavaScript/SNIPPET- defsetter.sublime-snippet",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/User/JavaScript/SNIPPET - defgetter.sublime-snippet",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/User/JavaScript/SNIPPET - objprop.sublime-snippet",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/User/JavaScript/SNIPPET - eqobj.sublime-snippet",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/User/JavaScript/SNIPPET - eqfunc.sublime-snippet",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 6 - Objects/Utility functions to manipulate objects.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 6 - Objects/Objects as Associative Arrays.js"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"activatesearchf",
			"init",
			"search(",
			"urlcallback",
			"jquerycheckload",
			"setoftentweets",
			"console",
			"this",
			"returntentweets",
			"activateTenMoreTweetsButton",
			"urlCallback",
			"bind",
			"});",
			"activatecleartagsbu",
			".call(domModule)",
			".bind(this)",
			"window.clouder",
			"activate",
			"setoftentweets",
			"gettenmoretweets",
			"hideallbutone",
			"urlcallback",
			"activatetenmore",
			"addtweettags",
			"urlconfirmass",
			"activatesearchfield",
			"makeenterkeydosomething",
			"createobjectforcloud",
			"eraseallfields",
			"hideallbut",
			"this",
			"execute",
			"activatesearchfield",
			"executetwitter",
			"setOfTenTweets",
			"urlconfirm",
			"scrolldo",
			"eraseAllFields",
			"returnTenTweets",
			"addTweetTags",
			"whichCloud",
			"Search(",
			"search(",
			"Search",
			"search",
			"Search",
			"search",
			"Search",
			"search",
			"Search",
			"search",
			"Search",
			"search",
			"addTweetTags",
			"executeTwitterTermSearch",
			"php",
			"url",
			"created_at",
			"url",
			"console",
			"twittercloudtags",
			"killCloud",
			"twitterCloudTags",
			"closest",
			"callback",
			"init",
			"clearall",
			"scrollupto",
			"pSpan",
			"hide",
			"show",
			"deprecated",
			"click",
			"hide",
			"clearAl",
			"dOptions",
			"CloudOptions",
			"Options",
			"drawcloud",
			"executeTwitterFeedSearch",
			"executeTwitterSearch",
			"getTwitterHandle",
			"createTweetCloud",
			"containerTop",
			"func",
			"class",
			"createTweetCloud",
			"twitterCloudTags[i]",
			"callback",
			"sm",
			"success",
			"button",
			"containerTop",
			"offsetTop",
			"body",
			"colorbgr",
			"parsecolor",
			"color",
			"3",
			"rotat",
			"speed",
			"nonsense",
			"font",
			"size",
			"top",
			"width",
			"height",
			"width",
			"size",
			"fontsize",
			"descriptor",
			"xScale",
			"opa",
			"!=",
			"==",
			"!=",
			"==",
			"opa",
			"addTweetTags",
			"arrayOfTweetObjects",
			"callback",
			"addTweetTags",
			"window.clouder",
			"addTweetTags",
			"init",
			"createObjectForCloud",
			"date",
			"offsetTop"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"!==",
			"===",
			"<br>",
			";<br>"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "index.html",
					"settings":
					{
						"buffer_size": 4116,
						"regions":
						{
						},
						"selection":
						[
							[
								1986,
								1986
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "style.css",
					"settings":
					{
						"buffer_size": 233,
						"regions":
						{
						},
						"selection":
						[
							[
								113,
								113
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/CSS/CSS.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "script.js",
					"settings":
					{
						"buffer_size": 12512,
						"regions":
						{
						},
						"selection":
						[
							[
								12512,
								12512
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5946.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "twitter_timeline_search.php",
					"settings":
					{
						"buffer_size": 2082,
						"regions":
						{
						},
						"selection":
						[
							[
								759,
								759
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "jqueryScript.js",
					"settings":
					{
						"buffer_size": 7424,
						"regions":
						{
						},
						"selection":
						[
							[
								7140,
								7140
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3714.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "Refactoring to make Twitter Cloud app more OO.txt",
					"settings":
					{
						"buffer_size": 3534,
						"regions":
						{
						},
						"selection":
						[
							[
								3534,
								3534
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "Refactoring to make Twitter Cloud app more object-",
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1455.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"settings":
					{
						"buffer_size": 11117,
						"regions":
						{
						},
						"selection":
						[
							[
								11117,
								11117
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "OLD_PRErefactor_jqueryScript.js",
					"settings":
					{
						"buffer_size": 7424,
						"regions":
						{
						},
						"selection":
						[
							[
								6164,
								6164
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3276.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "REFACTOR_bugfix_HUNT.js",
					"settings":
					{
						"buffer_size": 4345,
						"regions":
						{
						},
						"selection":
						[
							[
								4345,
								4345
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2490.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 10,
					"file": "TEMP_oo_REFACTOR.js",
					"settings":
					{
						"buffer_size": 12512,
						"regions":
						{
						},
						"selection":
						[
							[
								375,
								375
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "twitter_keyword_search.php",
					"settings":
					{
						"buffer_size": 2232,
						"regions":
						{
						},
						"selection":
						[
							[
								1490,
								1490
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "",
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 506.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "cloud.js",
					"settings":
					{
						"buffer_size": 15710,
						"regions":
						{
						},
						"selection":
						[
							[
								11937,
								11937
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5145.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 29.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.590967741935,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 50.0,
	"status_bar_visible": true
}
