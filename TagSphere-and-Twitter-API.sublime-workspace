{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"options",
				"options"
			],
			[
				"hide",
				"hide"
			],
			[
				"too",
				"activateTooltip"
			],
			[
				"tst",
				"twitterSearchTerm"
			],
			[
				"margin",
				"margin-bottom"
			],
			[
				"twitter_",
				"twitter_search_term"
			],
			[
				"twit",
				"twitterSearchTerm"
			],
			[
				"exec",
				"executeTwitterTermSearch"
			],
			[
				"twist",
				"twitterSearchTerm"
			],
			[
				"createob",
				"createObjectForCloud"
			],
			[
				"fun",
				"fun	Function"
			],
			[
				"lito",
				"littleObjectFactoryForSingleValues"
			],
			[
				"accumula",
				"accumulatedValue"
			],
			[
				"argumets",
				"Arguments"
			],
			[
				"init",
				"initialValue"
			],
			[
				"merge",
				"mergeAll"
			],
			[
				"proj",
				"projectionFunctionThatReturnsArray"
			],
			[
				"tar",
				"testArray"
			],
			[
				"valu",
				"valueArray"
			],
			[
				"val",
				"valueArray"
			],
			[
				"aray",
				"arrayOfUnwanted"
			],
			[
				"searcht",
				"search_terms"
			],
			[
				"sear",
				"search_value"
			],
			[
				"aja",
				"ajax_results"
			],
			[
				"value",
				"value"
			],
			[
				"set",
				"setConfig"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"writ",
				"writable"
			],
			[
				"sum",
				"sumOfSquares"
			],
			[
				"for",
				"for	for (…) {…}"
			],
			[
				"pre",
				"preventExtensions"
			],
			[
				"prot",
				"prototype"
			],
			[
				"geto",
				"getOwnPropertyDescriptor"
			],
			[
				"defin",
				"defineProperty"
			],
			[
				"get",
				"getOwnPropertyDescriptor"
			],
			[
				"acce",
				"accessor_prop"
			],
			[
				"result",
				"result"
			],
			[
				"fu",
				"fun	Function"
			],
			[
				"Poin",
				"Point_3d"
			],
			[
				"pro",
				"prototype	SNIPPET - prototype (defining methods and properties)"
			],
			[
				"myO",
				"myObject"
			],
			[
				"tell",
				"tellHowMany"
			],
			[
				"quest",
				"questionsDiv"
			],
			[
				"dis",
				"displayQuestion"
			],
			[
				"questions",
				"questionsDiv"
			],
			[
				"each",
				"eachQuestion"
			],
			[
				"mul",
				"MultipleChoiceQuestion"
			],
			[
				"Dra",
				"DragDropQuestion"
			],
			[
				"Multip",
				"MultipleChoiceQuestion"
			],
			[
				"fruit",
				"fruitColor"
			],
			[
				"sc",
				"SCRIPT	Tag"
			],
			[
				"write",
				"writeWindow"
			],
			[
				"src",
				"srcArray"
			],
			[
				"imgA",
				"imgArray"
			],
			[
				"random",
				"randomNumberStorage"
			],
			[
				"rand",
				"randomSelection"
			],
			[
				"albums",
				"albumsNeeded"
			],
			[
				"album",
				"albumCover"
			],
			[
				"jq",
				"jqset	SNIPPET - jqset"
			],
			[
				"inl",
				"inline-block"
			],
			[
				"albu",
				"albumsNeeded"
			],
			[
				"results",
				"resultsHTML"
			],
			[
				"al",
				"albumsLength"
			],
			[
				"resu",
				"resultsHTML"
			],
			[
				"excerp",
				"excerptTruth"
			],
			[
				"excer",
				"excerptTruth"
			],
			[
				"strin",
				"stringLength"
			],
			[
				"str",
				"stringLength"
			],
			[
				"XML",
				"XMLHttpRequest"
			],
			[
				"resul",
				"resultsHtml"
			],
			[
				"foo",
				"fooTwo"
			],
			[
				"w",
				"whatIWant"
			],
			[
				"weight",
				"weightOrReps"
			]
		]
	},
	"buffers":
	[
		{
			"file": "index.html",
			"settings":
			{
				"buffer_size": 10197,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Welcome to the Tag Cloud.  This simple web app uses Twitter's API to get tweets from Twitter's database.  But instead of displaying the tweets in a vertical \"timeline\" as you may be used to seeing, the tag cloud renders the tweets as a collection of floating <span> elements.  \n\nThe tweet cloud responds to the movements of your mouse (mobile interactivity will be coming soon), and will highlight one tweet at a time depending on the position of the cursor.  When you click the screen, the page will alert the text located in the highlighted tag, and if there is a link contained in the tweet, the page will ask you whether you'd like to navigate to the location of the URL.  \n\nCurrently, there are two kinds of tweet clouds you can create.  With the search field on the left, you can create a tweet cloud with your (or anyone's) twitter screen name.  On the right, you can create a cloud by searching for any term you desire.  The tag cloud will display ten tweets at any given time, and the Feed Cloud will allow you to manually refresh the cloud with the ten previous tweets, while the Search Cloud will automatically refresh with more tweets.  Have fun! \n",
			"file": "summary_paragraph_brainstorm.txt",
			"file_size": 68,
			"file_write_time": 130596163157820718,
			"settings":
			{
				"buffer_size": 1160,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "<?php \n	\nif (!empty($_GET['q'])) {\n\n	// f(x) that validates user input\n	function test_input($data) {\n		$data = trim($data);\n		$data = stripslashes($data);\n		$data = htmlspecialchars($data);\n		return $data;\n	}\n\n	// Strip any dangerous and unnecessary text out of the search\n	$twitter_handle = test_input($_GET['q']);\n\n	// Create OAuth connection\n	require 'app_tokens.php';\n	require 'tmhOAuth.php';\n	$connection = new tmhOAuth(array(\n		'consumer_key' => $consumer_key,\n		'consumer_secret' => $consumer_secret,\n		'user_token' => $user_token,\n		'user_secret' => $user_secret\n		));\n\n	// Get the 200 most recent tweets using Twitter API\n	$http_code = $connection->request('GET',$connection->url('1.1/statuses/user_timeline'),\n		array('screen_name'=>$twitter_handle,\n			'count'=>200));\n\n	// Request was successful\n	if ($http_code == 200) {\n\n		// Extract the tweets from the API response\n		$tweet_data = json_decode($connection->response['response'],true);\n\n		// Accumulate tweets from results\n		$tweet_stream = array();\n\n		// Checks tweet object for urls, and if one exists, \n		// returns it.  Else, it checks for media urls, and \n		// if one exists, it returns it.  Else null.  Specifies \n		// whether URL is an image or not via boolean.  Else, null.\n		function getURL($theTweet) {\n\n			$url_location = $theTweet['entities']['urls'][0];\n			$media_location = $theTweet['entities']['media'][0];\n\n			if (!(empty($url_location))) {\n\n				// return $url_location['expanded_url'];\n				return array(\n					'theURL' => $url_location['expanded_url'], \n					'isImage' => false);\n\n			} else if (!(empty($media_location))) {\n\n				// return $media_location['media_url'];\n				return array(\n					'theURL' => $media_location['media_url'], \n					'isImage' => true\n					);\n\n			} else {\n\n				return array(\n					'theURL' => null, \n					'isImage' => null);\n			}\n		}\n\n		// Take tweet data, loop through tweets and create an associative array \n		// containing 'text', 'date', and 'url' keys\n		foreach($tweet_data as $tweet) {\n\n			$url = getURL($tweet);\n\n			array_push($tweet_stream, array(\n				'text' => $tweet['text'], \n				'date' => $tweet['created_at'],\n				'url' => $url['theURL'],\n				'isImage' => $url['isImage']\n				));\n		}\n\n		print json_encode($tweet_stream);\n	\n	// Handle errors from API request\n	}else{\n		if ($http_code == 429) {\n			print 'Error: Twitter API rate limit reached.';\n		}else{\n			print 'Error: Twitter was not able to process that request.';\n		}\n	}\n}\n\n?>",
			"file": "twitter_timeline_search.php",
			"file_size": 2468,
			"file_write_time": 130603007992249034,
			"settings":
			{
				"buffer_size": 2445,
				"line_ending": "Windows"
			}
		},
		{
			"file": "send_form_email.php",
			"settings":
			{
				"buffer_size": 2258,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app_tokens.php",
			"settings":
			{
				"buffer_size": 287,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "$(document).ready(function() {\n\n	// Array that will hold the tags used to generate the cloud\n	var twitterCloudTags = [];\n\n	var domModule = (function() {\n		\n		return {\n			\n			// Check to make sure jQuery loaded properly\n			jqueryCheckLoad: function(selector, milliseconds) {\n\n				$(selector).fadeOut(milliseconds).fadeIn(milliseconds);\n			},\n\n			activateTooltip: function(selector) {\n				\n				$(selector).tooltip(); \n			},\n\n			// Make input fields responsive to enter key\n			makeEnterKeyDoSomething: function(selector, func) {\n				\n				$(selector).keydown(function(e) {\n					\n					if (e.keyCode === 13) {\n\n						func();\n					}\n				});\n			},\n\n			// Activates button and input field so that their respective events \n			// trigger the given f(x)\n			activateSearchField: function(buttonID, inputID, func) {\n				\n				$(buttonID).on('click', function() {\n					func();\n				});\n\n				this.makeEnterKeyDoSomething(inputID, function() {\n					func();\n				});\n			},\n\n			scrollDownTo: function(selector, milliseconds) {\n				\n				$('html, body').animate({\n\n					scrollTop: $(selector).offset().top\n				}, milliseconds);\n			},\n\n			scrollUpToTop: function(milliseconds) {\n				\n				$('html, body').animate({scrollTop: 0}, milliseconds);\n			},\n\n			hideAllButOne: function(theClass, theID) {\n				\n				$(theClass).not(theID).fadeOut();\n			},\n\n			eraseAllFieldsButOne: function(theClass, theID) {\n				\n				$(theClass).not(theID).val('');\n			},\n\n			eraseAllFields: function(theClass) {\n				\n				$(theClass).val('');\n			},\n\n			deactivateToggleForAccordion: function(selector) {\n				\n				$(selector).collapse({toggle: false});\n			},\n\n			customToggleForAccordion: function(selector) {\n				\n				$(selector).on('click', function() {\n					\n					$('div').removeClass('do_not_close');\n\n					$(this).closest('.panel-heading').next().addClass('do_not_close');\n\n					$('.collapse:not(.do_not_close)').collapse('hide');\n\n				});\n			},\n\n			revealOptionsCollapse: function() {\n				\n				$('.collapse:not(#collapseThree)').collapse('hide');\n				$('#collapseThree').collapse('show');\n			},\n\n			displayOptions: function(optionsID) {\n				\n				this.revealOptionsCollapse();\n				this.hideAllButOne('.options', optionsID);\n				$(optionsID).fadeIn(3000);\n			},\n\n			attachLink: function(selector, url) {\n				\n				$(selector).on('click', function() {\n			\n					window.open(url);\n				});\n			},\n\n			getVal: function(selector) {\n				\n				return $(selector).val();\n			},\n\n			clearField: function(selectors) {\n				\n				selectors.forEach(function(fieldID) {\n					\n					$(fieldID).val(\"\");\n				});\n			},\n\n			emailModalAJAX: function() {\n				\n				$('#send_email_btn').on('click', function(event) {\n					\n					var firstName = domModule.getVal.call(domModule, '#first_name');\n					var lastName = domModule.getVal.call(domModule, '#last_name');\n					var email = domModule.getVal.call(domModule, '#email');\n					var comments = domModule.getVal.call(domModule, '#comments');\n					var url = '/shared/send_form_email.php';\n\n					var request = $.ajax({\n\n						type: \"POST\",\n						url: url,\n						data: {\n							first_name: firstName,\n							last_name: lastName,\n							email: email,\n							comments: comments\n						}\n					});\n\n					request.done(function() {\n						\n						$('#emailModal').modal('hide');\n						domModule.clearField(['#first_name', '#last_name', '#email', '#comments']);\n						$('#send_email_btn').popover('hide');\n					});\n\n					request.fail(function() {\n						\n						alert('Sorry, AJAX was unable to process that request!');\n					});\n\n					event.preventDefault();\n				});\n			}			\n		}\n	\n	})();\n\n	var tagModule = (function() {\n	\n		return {\n\n			// Takes military time and formats it into clock time\n			formatAMPM: function(date) {\n				\n				var hours = date.getHours();\n				var minutes = date.getMinutes();\n				var AMorPM = hours >= 12 ? 'pm' : 'am';\n\n				hours = hours % 12;\n				hours = hours ? hours : 12;\n\n				minutes = minutes < 10 ? '0' + minutes : minutes;\n\n				var strTime = hours + ':' + minutes + ' ' + AMorPM;\n\n				return strTime;\n			},\n\n			// Takes 'created_at' values from tweet objects and turns them \n			// into a date format that the tags can use\n			// If 'withTime' is true, it adds the time to the result as well\n			createDate: function(theGivenDate, withTime) {\n				\n				var tempDate, date;\n				var ms = Date.parse(theGivenDate);\n\n				tempDate = new Date(ms);\n				date = tempDate.toString().slice(0, 10);\n\n				if (withTime) {\n\n					time = this.formatAMPM.call(tagModule, tempDate);\n					date += \" \" + time;\n				}\n\n				return date;\n			},\n\n			// Generates an ID for the new object based upon the number of tags already \n			// in the tag array.  The first ten tags take thenumbers (as strings) 0-9, \n			// the next ten 00, 01, 02...09, the next ten 000, 001, 002...009, and so on.\n			createID: function(arr) {\n				\n				var tagLength = arr.length;\n				var subtractor = 0;\n\n				// Starting from zero, subtract from the number of elements in the array, \n				// until the result is evenly divisible by 10\n				while ((tagLength - subtractor)%10 > 0) {\n					subtractor++;\n				}\n\n				// The first digit of the tag is equal to the amount that had to be \n				// subtracted to get a number evenly divisible by 10\n				var myFirstDigit = subtractor;\n				// The number of zeroes is equal to the amount of times 10 goes \n				// into the result of tagLength minus the subtractor\n				var myNumberOfZeroes = (tagLength - subtractor)/10;\n\n				function output(firstDigit, numberOfZeroes) {\n\n					var zeroes = \"\";\n\n					if (numberOfZeroes === 0) {\n						return firstDigit.toString();\n					}\n					else {\n						while (numberOfZeroes !== 0) {\n							zeroes += \"0\";\n							numberOfZeroes--;\n						}\n						return firstDigit.toString() + zeroes;\n					}\n				}\n				// Invoke the 'output' f(x)\n				return output(myFirstDigit, myNumberOfZeroes); 	\n			},\n\n			// For input, instantiations of the Clouder class accept an array \n			// of \"little objects\" of the form: {text: theText, id: theID, weight: theWeight}.\n			// This f(x) creates a single \"little object\" for the cloud\n			createObjectForCloud: function(theText, theURL, cloudTags) {\n				\n				var theID = this.createID(cloudTags);\n\n				return {text: theText, id: theID, weight: 0.1, url: theURL};\n			},\n\n			// Adds tweet tag objects to the array of tweet tags\n			// Formatting of the text depends upon which search URL is invoked\n			addTweetTags: function(arrayOfTweetObjects, variableToSaveTo, whichResults) {\n				\n				var tweetText, tweetDate, url, displayText;\n\n				for (var i = 0; i < arrayOfTweetObjects.length; i++) {\n					\n					var tweet = arrayOfTweetObjects[i];\n\n					tweetText = tweet.text;\n					url = tweet.url;\n\n					if (whichResults === \"twitter_timeline_search.php\") {\n\n						tweetDate = this.createDate(tweet.date, false);\n\n						displayText = tweetText + \" \\n\" + tweetDate;\n					}\n\n					if (whichResults === \"twitter_keyword_search.php\") {\n\n						var userName = \"- @\" + tweet.screen_name;\n						tweetDate = this.createDate(tweet.date, true);\n\n						displayText = \"\\n\" + tweetText + \"\\n\" + userName + \"\\n\" + tweetDate;\n					}\n\n					var newTweetTagObject = this.createObjectForCloud(displayText, url, variableToSaveTo);\n					console.log(newTweetTagObject);\n\n					variableToSaveTo.push(newTweetTagObject);\n				}\n			},\n\n			clearTweetTags: function() {\n				\n				twitterCloudTags = [];\n			}\n		}\n	\n	})();\n\n	var cloudModule = (function() {\n	\n		return {\n\n			// Displays dialog box that shows tweet text and asks the user if they would \n			// like to navigate to the link contained within the tweet \n			urlConfirmAssignment: function(theText, theURL) {\n				\n				var question = confirm(theText + \n					\"\\n\\n Are you sure you want to navigate to the link contained in the highlighted tweet?\");\n\n				if (question) {\n					window.open(theURL);\n				} else return;\n			},\n\n			// Callback f(x) for when tweet tags are clicked upon\n			// Checks to see whether tags exist, and if so, loops through the tag array \n			// until it finds the \"little object\" with the matching id, and then invokes \n			// 'urlConfirmAssignment', passing it the tweet text and url\n			urlCallback: function(id) {\n				\n				if (twitterCloudTags.length !== 0) {\n					for (var i = 0; i < twitterCloudTags.length; i++) {\n						\n						var theTweet = twitterCloudTags[i];\n\n						if (theTweet.id === id) {\n							if (theTweet.url) {\n\n								this.urlConfirmAssignment(theTweet.text, theTweet.url);\n\n							} else {\n								alert(theTweet.text);\n							}\n						}\n					}\n				}\n			},\n\n			killCloud: function() {\n				window.clouder.kill();\n			},\n\n			// Check to see if tags are already displayed from a previous search.\n			// If so, kill that cloud.\n			checkIfCloudExists: function() {\n				\n				if ($('#clouder').children().length > 0) {\n\n					this.killCloud();\n				}\n			},\n\n			// Initialize tag cloud\n			init: function(variableContainingTags) {\n				\n				this.checkIfCloudExists();\n\n				var w = document.body.clientWidth, h = document.body.clientHeight;\n				var clouder = document.getElementById('clouder');\n				var parent = document.getElementById('cloudParent');\n				var parentRect = parent.getBoundingClientRect();\n\n				clouder.style.width = (w * 3 / 4).toString() + \"px\";\n				clouder.style.height = (h * 1.1).toString() + \"px\";\n				clouder.style.position = \"absolute\";\n				clouder.style.left = (w / 6).toString() + \"px\";\n				clouder.style.top = (parentRect.y + window.pageYOffset).toString() + \"px\";\n\n				window.clouder = new Clouder({\n					container: clouder,\n					tags: variableContainingTags,\n					nonSense: 0.3,\n					interval: 10,\n					callback: this.urlCallback.bind(cloudModule)\n				});\n			},\n\n			getTenMoreTweets: function() {\n				\n				this.init.call(cloudModule, setOfTenTweets.returnTenTweets.call(setOfTenTweets));\n			},\n\n			activateTenMoreTweetsButton: function() {\n				$('#getTenPreviousTweets').click(this.getTenMoreTweets.bind(cloudModule));\n			}\n		}\n	\n	})();\n\n	var searchModule = (function() {\n	\n		return {\n\n			getTwitterSearchTerm: function(searchFieldID) {\n				\n				return $(searchFieldID).val();\n			},\n\n			// AJAX request to Twitter for tweet data\n			search: function(searchTerms, searchURL) {\n				\n				// If cloud tags already exist, kill cloud before\n				// running the AJAX request\n				cloudModule.checkIfCloudExists();\n\n				$.ajax({\n\n					// Create URL for tweet search\n					url: searchURL + \"?q=\" + searchTerms,\n\n					success: function(data) {\n						\n						// Take the returned string and parse into queryable JSON\n						// The server will have already cut the data down to \n						// only what is needed for the cloud\n						var parsedData = JSON.parse(data);\n						console.log(parsedData);\n\n						tagModule.addTweetTags(parsedData, twitterCloudTags, searchURL);\n						setOfTenTweets.init(twitterCloudTags);\n						cloudModule.init(setOfTenTweets.returnTenTweets());\n						domModule.scrollDownTo('#clouder', 500);\n					},\n\n					error: function() {\n						\n						$('#clouder').html('Search for Tweets failed!');\n					}\n				});\n			},\n\n			// Abstraction of general search process\n			executeSearch: function(searchTermField, url, optionsDiv) {\n				\n				var twitterSearchTerm;\n				var input = $.trim($(searchTermField).val());\n\n				// Execute the search only if there is something in the input field\n				if (input.length > 0) {\n\n					tagModule.clearTweetTags();\n					twitterSearchTerm = this.getTwitterSearchTerm(searchTermField);\n					domModule.eraseAllFieldsButOne('.inputField', searchTermField);\n					domModule.displayOptions(optionsDiv);\n					this.search(twitterSearchTerm, url);\n				}\n			},\n\n			executeTwitterAccountSearch: function() {\n				\n				this.executeSearch.call(searchModule, '#twitterHandle', 'twitter_timeline_search.php', '#feedCloudOptions');\n			},\n\n			executeTwitterTermSearch: function() {\n				\n				this.executeSearch.call(searchModule, '#search_term', 'twitter_keyword_search.php', '#searchCloudOptions');\n			}\n\n		}\n	\n	})();\n\n	// When 'Clear Tags' button clicked, kill the cloud, reset the tag array, \n	// then autoscroll back up to the top\n	function activateClearTagsButton() {\n\n		$('.clearAll').click(function() {\n			\n			$('.options').fadeOut(1000);\n			domModule.eraseAllFields('.inputField');\n\n			cloudModule.killCloud();\n			tagModule.clearTweetTags();\n\n			domModule.scrollUpToTop(500);\n		});\n	}\n\n	// Module that is initialized with the array of \"little tweetobjects\"\n	// The module takes that array and breaks the objects up into arrays\n	// of length 10, and pushes them to an array which holds them all.\n	// The module then returns 10 tweet objects at a time, and when it has \n	// returned all of them, the counter resets to 0.\n	var setOfTenTweets = (function() {\n\n		var counter;\n		var arrayOfSetsOfTen;\n\n		function incrementCounter() {\n			return counter++;\n		}\n\n		function resetCounter() {\n			counter = 0;\n			console.log(\"Counter reset to 0.\");\n		}\n\n		// Takes an array of elements, and breaks it up into sets of a \n		// given size, and then groups all these sets into a new array\n		function createArrayOfArrays(source, setSize) {\n			var i, j;\n			var arrayOfArrays = [];\n\n			for (var i = 0, j = source.length; i < j; i += setSize) {\n				\n				tempArray = source.slice(i, i + setSize);\n				arrayOfArrays.push(tempArray);\n			}\n\n			return arrayOfArrays;\n		}\n\n		// Initializes the module with the array of tweet objects\n		function init(arrayOfTweetObjects) {\n\n			arrayOfSetsOfTen = createArrayOfArrays(arrayOfTweetObjects, 10);\n	    	counter = 0;\n		}\n\n		// Returns 10 of the tweet objects at a time\n		// If the counter has reached the length of the array of arrays, \n		// the counter resets to 0 and indicates this in the console\n		function returnTenTweets() {\n\n			var setOfTen;\n\n			setOfTen = arrayOfSetsOfTen[counter];\n			incrementCounter();\n	  \n		    if (!(counter < arrayOfSetsOfTen.length)) {\n		      resetCounter();\n		    }\n	    \n			return setOfTen;\n		}\n\n		return {\n			init: init,\n			returnTenTweets: returnTenTweets,\n			resetCounter: resetCounter\n		};\n\n	})();\n\n	// IMPLEMENTATION\n	// Check that jQuery is working properly\n	domModule.jqueryCheckLoad('#header', 1000);\n	// Bootstrap tooltips\n	domModule.activateTooltip('.bar-icon-right');\n\n	domModule.deactivateToggleForAccordion('.collapse');\n	$('#collapseOne').collapse('show');\n	domModule.customToggleForAccordion('.accordion_header');\n\n	activateClearTagsButton();\n\n	domModule.activateSearchField.call(domModule, '#createTwitterFeedCloud', '#twitterHandle', searchModule.executeTwitterAccountSearch.bind(searchModule));\n	domModule.activateSearchField.call(domModule, '#createTweetSearchCloud', '#search_term', searchModule.executeTwitterTermSearch.bind(searchModule));\n\n	cloudModule.activateTenMoreTweetsButton.call(cloudModule);\n\n	domModule.attachLink('#twitter_icon', 'http://www.twitter.com/VRSanchez8717');\n	domModule.attachLink('#github_icon', 'http://www.github.com/tdbts');\n\n	domModule.emailModalAJAX.call(domModule);\n	$('#send_email_btn').popover({content: 'Thanks for reaching out!'}, 'click');\n\n});",
			"settings":
			{
				"buffer_size": 14851,
				"line_ending": "Windows"
			}
		},
		{
			"file": "script.js",
			"settings":
			{
				"buffer_size": 15546,
				"line_ending": "Windows"
			}
		},
		{
			"file": "style.css",
			"settings":
			{
				"buffer_size": 835,
				"line_ending": "Windows"
			}
		},
		{
			"file": "twitter_keyword_search.php",
			"settings":
			{
				"buffer_size": 2595,
				"line_ending": "Windows"
			}
		},
		{
			"file": "cloud.js",
			"settings":
			{
				"buffer_size": 15717,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 265.0,
		"selected_items":
		[
			[
				"packi",
				"Package Control: Install Package"
			],
			[
				"jvs",
				"Set Syntax: JavaScript"
			],
			[
				"php",
				"Set Syntax: PHP"
			],
			[
				"synpla",
				"Set Syntax: Plain Text"
			],
			[
				"synhtml",
				"Set Syntax: HTML"
			],
			[
				"color",
				"Color Picker"
			],
			[
				"pcki",
				"Package Control: Install Package"
			],
			[
				"css",
				"Set Syntax: CSS"
			],
			[
				"json",
				"Set Syntax: JSON"
			],
			[
				"html",
				"Set Syntax: HTML"
			],
			[
				"synr",
				"Set Syntax: R"
			],
			[
				"jv",
				"Set Syntax: JavaScript"
			],
			[
				"synjvs",
				"Set Syntax: JavaScript"
			],
			[
				"javs",
				"Set Syntax: JavaScript"
			],
			[
				"snippet",
				"Snippet: html"
			],
			[
				"javas",
				"Set Syntax: JavaScript"
			],
			[
				"synhtm",
				"Set Syntax: HTML"
			],
			[
				"synht",
				"Set Syntax: HTML"
			],
			[
				"HTML",
				"Set Syntax: HTML"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"packagi",
				"Package Control: Install Package"
			],
			[
				"synjavas",
				"Set Syntax: JavaScript"
			],
			[
				"select al",
				"Bookmarks: Select All"
			],
			[
				"xml",
				"xml2json: xml to json"
			],
			[
				"fetch",
				"Fetch: Package"
			],
			[
				"syn htm",
				"Set Syntax: HTML"
			],
			[
				"pack con i",
				"Package Control: Install Package"
			],
			[
				"packe con i",
				"Package Control: Install Package"
			],
			[
				"packet ins",
				"Package Control: Install Package"
			],
			[
				"synjaas",
				"Set Syntax: JavaScript"
			],
			[
				"Package Control: i",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 496.0
	},
	"console":
	{
		"height": 111.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/Vincent/Documents/Hckr/Server-Side Stuff/Nearly Free Speech/Shared/send_form_email.php",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/Refactoring to make Twitter Cloud app more OO.txt",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/REFACTOR_bugfix_HUNT.js",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/TEMP_oo_REFACTOR.js",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/OLD_PRErefactor_jqueryScript.js",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/jqueryScript.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript Is Sexy/Javascript_Is_Sexy_PROJECT.sublime-workspace",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript Is Sexy/Javascript_Is_Sexy_PROJECT.sublime-project",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/keywordSearchCloudTagFormatting_NOTES.js",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/twitter_cloud_search.php",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/twitter_timeline_search.php",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/User/JavaScript/SNIPPET ifor loop.sublime-snippet",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/User/JavaScript/SNIPPET - jfor loop.sublime-snippet",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/function selectRandomHexValue.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/function invertHex.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/function selectRandomColor",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/fixDiv_NOTES.txt",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/quirksMode_workaround_NOTES.txt",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/codeCleanup_10.13_notes.txt",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/InsertDate/README.md",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project2_Twitter_API/timeline_response.php",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/search_response.php",
		"/C/Users/Vincent/Documents/Hckr/jquery/Useful Scripts/makeEnterKeyDoSomething.js",
		"/C/Users/Vincent/Documents/Hckr/Play/tweets/tweetPlay/jqueryForPlay.js",
		"/C/Users/Vincent/Documents/Hckr/Server-Side Stuff/Useful Scripts/test_input.php",
		"/C/Users/Vincent/Documents/Hckr/Server-Side Stuff/Useful Scripts/Validation_EmailFormat.php",
		"/C/Users/Vincent/Documents/Hckr/Server-Side Stuff/Useful Scripts/Validation_URL.php",
		"/C/Users/Vincent/Documents/Hckr/Server-Side Stuff/Useful Scripts/Validation_LettersAndWhiteSpacesOnly.php",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/jquery-1.11.1.min.js",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/cloud-min.js",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project3_TagSphere_and_Twitter_API/cloud.js",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project2_Twitter_API/raw_data_response.php",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project2_Twitter_API/jqueryForProject.js",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project2_Twitter_API/search_response.php",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project2_Twitter_API/app_tokens.php",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project2_Twitter_API/index.html",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 7 - Arrays/ECMAScript 5 Array Methods.js",
		"/C/Users/Vincent/Documents/Hckr/jquery/Useful Scripts/scrollUpToTop.js",
		"/C/Users/Vincent/Documents/Hckr/jquery/Useful Scripts/scrollDownTo.js",
		"/C/Users/Vincent/Documents/Hckr/jquery/Useful Scripts/scrollDownToTop.js",
		"/C/Users/Vincent/Documents/Hckr/OPC/JsTagSphere/test.html",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/FunctionalProgrammingFunctions.js",
		"/C/Users/Vincent/Documents/Hckr/OPC/JsTagSphere/cloud.js",
		"/C/Users/Vincent/Documents/Hckr/OPC/JsTagSphere/mainpage.js",
		"/C/Users/Vincent/Documents/Hckr/OPC/JsTagSphere/README.md",
		"/C/cygwin64/home/Vincent/bashtest/myscript",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/User/JavaScript/SNIPPET - separator.sublime-snippet",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Functional Programming in Javascript/scrapPaper.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/PracticeCreatingFunctionalProgrammingFunctions.js",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/User/PlainText/SNIPPET - bashscript.sublime-snippet",
		"/C/Users/Vincent/Documents/Hckr/Play/textScanner.js",
		"/C/Users/Vincent/Documents/Hckr/Play/imgAggregator/imgAggregator.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 7 - Arrays/Iterating Arrays.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 7 - Arrays/Array Methods.js",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project2_Twitter_API/ajax_response.php",
		"/C/Users/Vincent/Documents/Hckr/OpenSource/SetUp/jQueryTest.js",
		"/C/Users/Vincent/Documents/Hckr/OpenSource/SetUp/TestHTMLPage",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/testTweets.json",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/testTweetsSep14.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/testTweets.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2014_09.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2014_08.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2014_07.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2014_06.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2014_05.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2014_04.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2014_03.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2014_02.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2014_01.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_12.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_11.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_10.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_09.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_08.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_07.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_06.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_05.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_04.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_03.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_02.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2013_01.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2012_12.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2012_11.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2012_10.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2012_09.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2012_08.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2012_07.js",
		"/C/Users/Vincent/Documents/Hckr/R/Introduction to Statistical Thinking with R/2012_06.js",
		"/C/Users/Vincent/Downloads/twitonomy_VRSanchez8717_vrsanchez8717.xlsx",
		"/C/Users/Vincent/Documents/Hckr/HTML/Test HTML Page w jQuery.html",
		"/C/Users/Vincent/Documents/Hckr/OpenSource/jQueryTestSetup.js",
		"/C/Users/Vincent/Documents/Hckr/jquery/jquery-1.11.1.min.js",
		"/C/Users/Vincent/Documents/Hckr/HTML/superBASIChtmlSetUp.html",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 7 - Arrays/Array-Like Objects.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 6 - Objects/Object Attributes.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 6 - Objects/Property Attributes.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 6 - Objects/Object dot create().js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 1 - Introduction to Javascript/constructor - Two-Dimensional Geometric Points.js",
		"/C/Users/Vincent/Documents/Hckr/Play/imgAggregator/index.html",
		"/C/Users/Vincent/Documents/Hckr/Play/Object Play/ObjectPlay - Implementation of the Combination Constructor-Prototype Pattern - Quiz Scores.js",
		"/C/Users/Vincent/Documents/Hckr/Play/Object Play/Quiz HTML Implementation.html",
		"/C/Users/Vincent/Documents/Hckr/Play/Object Play/ObjectPlay - Implementation of the Parasitic Combination Inheritance Pattern.js",
		"/C/Users/Vincent/Documents/Hckr/Play/Object Play/Object Play - Douglas Crockfords Object dot create method.js",
		"/C/Users/Vincent/Documents/Hckr/Play/Object Play/ObjectPlay - Instrument and JSON dot stringify.js",
		"/C/Users/Vincent/Documents/Hckr/Play/Object Play/Object Play - inheritPrototype.js",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project2_Twitter_API/tmhOAuth/README.md",
		"/C/Users/Vincent/Documents/Hckr/Projects/Project 1 - Album Web App/jQueryForProject1.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/isArrayLike.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/union for any number of objects.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/union (obj manipulation).js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/extend (obj manipulation).js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/array - close gaps and remove undefined and null.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/dense - to close gaps in a sparse array.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/dense - to close gaps in a sparse array",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/useful scripts/defineProp.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 7 - Arrays/Multidimensional Arrays.js",
		"/C/Users/Vincent/Documents/Hckr/Play/imgAggregator/messingWith_imgAggregator.js",
		"/C/Users/Vincent/Documents/Hckr/Play/imgAggregator/TINKERimgAggregatorTINKER.js",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/User/JavaScript/SNIPPET - forin.sublime-snippet",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 6 - Objects/Class Attribute.js",
		"/C/Users/Vincent/Documents/Hckr/JavaScript/Javascript the Definitive Guide/Chapter 6 - Objects/Property Getters and Setters.js",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/User/JavaScript/SNIPPET- defsetter.sublime-snippet",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/User/JavaScript/SNIPPET - defgetter.sublime-snippet",
		"/C/Users/Vincent/AppData/Roaming/Sublime Text 2/Packages/User/JavaScript/SNIPPET - objprop.sublime-snippet"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"modal",
			"activate",
			"createObjectForCloud",
			"addTweetTags",
			"urlCallback",
			"rho",
			"header",
			"j",
			"date",
			"chunk",
			"rho",
			"stepAngle",
			"z",
			"(",
			"interval",
			"onTimer",
			"spin",
			"theta",
			"xscale",
			"nonsense",
			"lastX",
			"setPos",
			"customToggleForAccordion",
			"accordion_one",
			"customToggleForAccordion",
			"<a ",
			"accordion",
			"modal",
			"tooltip",
			"jquery",
			"activatetoggle",
			"activatetogglefor",
			"ajax",
			"deactivate",
			"accordianThree",
			"accordian",
			"collapse",
			"accordian-group",
			"show",
			"collapse",
			"display",
			"displayoptions",
			"tag_",
			"/a",
			".call",
			"this",
			"domModule",
			".bind(domModule)",
			");",
			"domModule, ",
			"al",
			"this",
			"get",
			"activatecleartags",
			"alt",
			"keys",
			"tag",
			"caret",
			"activatesearchf",
			"init",
			"search(",
			"urlcallback",
			"jquerycheckload",
			"setoftentweets",
			"console",
			"this",
			"returntentweets",
			"activateTenMoreTweetsButton",
			"urlCallback",
			"bind",
			"});",
			"activatecleartagsbu",
			".call(domModule)",
			".bind(this)",
			"window.clouder",
			"activate",
			"setoftentweets",
			"gettenmoretweets",
			"hideallbutone",
			"urlcallback",
			"activatetenmore",
			"addtweettags",
			"urlconfirmass",
			"activatesearchfield",
			"makeenterkeydosomething",
			"createobjectforcloud",
			"eraseallfields",
			"hideallbut",
			"this",
			"execute",
			"activatesearchfield",
			"executetwitter",
			"setOfTenTweets",
			"urlconfirm",
			"scrolldo",
			"eraseAllFields",
			"returnTenTweets",
			"addTweetTags",
			"whichCloud",
			"Search(",
			"search(",
			"Search",
			"search",
			"Search",
			"search",
			"Search",
			"search",
			"Search",
			"search",
			"Search",
			"search",
			"addTweetTags",
			"executeTwitterTermSearch",
			"php",
			"url",
			"created_at",
			"url",
			"console",
			"twittercloudtags",
			"killCloud",
			"twitterCloudTags",
			"closest",
			"callback",
			"init",
			"clearall",
			"scrollupto",
			"pSpan",
			"hide"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"!==",
			"===",
			"<br>",
			";<br>"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "index.html",
					"settings":
					{
						"buffer_size": 10197,
						"regions":
						{
						},
						"selection":
						[
							[
								4567,
								4567
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 14673.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "summary_paragraph_brainstorm.txt",
					"settings":
					{
						"buffer_size": 1160,
						"regions":
						{
						},
						"selection":
						[
							[
								1159,
								679
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "twitter_timeline_search.php",
					"settings":
					{
						"buffer_size": 2445,
						"regions":
						{
						},
						"selection":
						[
							[
								1604,
								1604
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 481.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "send_form_email.php",
					"settings":
					{
						"buffer_size": 2258,
						"regions":
						{
						},
						"selection":
						[
							[
								409,
								409
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 273.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "app_tokens.php",
					"settings":
					{
						"buffer_size": 287,
						"regions":
						{
						},
						"selection":
						[
							[
								287,
								287
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"settings":
					{
						"buffer_size": 14851,
						"regions":
						{
						},
						"selection":
						[
							[
								7095,
								7098
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1757.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 6,
					"file": "script.js",
					"settings":
					{
						"buffer_size": 15546,
						"regions":
						{
						},
						"selection":
						[
							[
								8137,
								8137
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4704.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "style.css",
					"settings":
					{
						"buffer_size": 835,
						"regions":
						{
						},
						"selection":
						[
							[
								762,
								762
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 567.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "twitter_keyword_search.php",
					"settings":
					{
						"buffer_size": 2595,
						"regions":
						{
						},
						"selection":
						[
							[
								2246,
								2246
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "",
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 592.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "cloud.js",
					"settings":
					{
						"buffer_size": 15717,
						"regions":
						{
						},
						"selection":
						[
							[
								12383,
								12383
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4923.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 29.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.33,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 81.0,
	"status_bar_visible": true
}
