* 10/14/2014 10:28:42 AM * 
  
  Upon closer inspection of 'cloud.js', it seems that the author didn't rely on DXImageTransform, but rather implemented it as a backup in case the browser doesn't support modern CSS3 opacity...which means that the author probably didn't use quirks mode for this reason, but rather, probably used it for certain geometrical purposes.

  My guess is that the author used it as a half-ass hack to manipulate the spans that contain the tag text in some particular way.

  After working with the debugger, it seems to be a problem with the way the browser is parsing the values for the spans' 'width', 'height', 'left', 'top' and 'font-size' values.  I know I'm getting closer to figuring out what the hell is going on.

  Also, in Chrome when I declare the doctype, the same problem happens, but sometimes instead I get an 'unexpected end of input' error in my jQuery script where I parse the data returned from the ajax call, which is pretty strange.  

  Okay, I think I'm on to something here.  I emulated the author's example for calculating the clouder div's height, width, left and top properties relative to the user's screen size.  The problem with these mathematical operations, however, is that they will return numbers, when there should be a string value with 'px' at the end -- something like clouder.style.width = "700px".  Let's see what I can do to fix this.  

  Okay!  I got the CSS errors to go away by wrapping the operations in parens, calling the 'toString' method, and concatenating the result with 'px' at the end.  However, the tags are not rendering at all, which means that there's something else causing problems.  